name: Production CI/CD

on:
  workflow_dispatch:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      new-release-published: ${{ steps.release.outputs.new-release-published }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        run: corepack enable

      - name: Setup NodeJs
        id: node-setup
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Audit
        continue-on-error: true
        run: pnpm audit

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Lint
        run: pnpm lint

      - name: Release
        id: release
        uses: codfish/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
